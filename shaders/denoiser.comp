#version 460

layout(local_size_x = 16, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, rgba8) uniform image2D shadowImages[];
layout(set = 0, binding = 1, rgba8) uniform image2D denoisedShadowImages[];

void main()
{
	// The resolution of the image:
	const ivec2 resolution = imageSize(shadowImages[0]);

	const ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);

	// If the pixel is outside of the image, don't do anything:
	if((pixel.x >= resolution.x) || (pixel.y >= resolution.y))
	{
	return;
	}

	//vec4 finalColor = imageLoad(inputImage, pixel);
	//imageStore(inputImage, pixel, finalColor);
	// TODO: Blur for shadows
  
	//vec3 shadowColor = imageLoad(shadowImages[0], pixel).xyz;

	//imageStore(denoisedShadowImages[0], pixel, vec4(shadowColor, 1.0f));
}